{"version":3,"sources":["components/Navbar.js","components/Metrics.js","App.js","index.js"],"names":["Navbar","className","to","Metrics","id","useParams","useState","setMetrics","useEffect","fetch","then","res","ok","alert","console","log","json","jsonRes","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAGe,SAASA,IACpB,OACI,qBAAKC,UAAU,2BAAf,SACI,oBAAIA,UAAU,OAAd,SAAqB,cAAC,IAAD,CAAMC,GAAG,SAAT,yB,8BCJlB,SAASC,IAAW,IACzBC,EAAOC,cAAPD,GADwB,EAEAE,mBAAS,IAFT,mBAEdC,GAFc,WAkB9B,OAdAC,qBAAU,WACNC,MAAM,iBAAD,OAAkBL,IAAMM,MAAK,SAAAC,GAC9B,GAAIA,EAAIC,GAGJ,OAFAC,MAAM,UACNC,QAAQC,IAAI,UACLJ,EAAIK,OAEXF,QAAQC,IAAI,aAEjBL,MAAK,SAAAO,GAAO,OAAIV,EAAWU,QAC/B,IAKC,qBAAKhB,UAAU,YAAf,SACI,gDCEGiB,MAjBf,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAAClB,EAAD,IAEA,cAAC,IAAD,CAAOmB,KAAK,oBAAoBC,OAAK,EAArC,SACE,cAACjB,EAAD,YCVVkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c79c98d1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport \"../styles/navbar.css\"\r\nexport default function Navbar() {\r\n    return (\r\n        <nav className=\"navbar bd-dark container\">\r\n            <h4 className=\"link\"><Link to=\"/lists\">Metrics</Link></h4>\r\n        </nav>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nexport default function Metrics() {\r\n    let { id } = useParams();\r\n    const [metrics, setMetrics] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        fetch(`/lists/custom/${id}`).then(res => {\r\n            if (res.ok) {\r\n                alert(\"inside\")\r\n                console.log(\"all ok\")\r\n                return res.json()\r\n            } else {\r\n                console.log(\"not ok\")\r\n            }\r\n        }).then(jsonRes => setMetrics(jsonRes))\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Metrics page</h1>\r\n            {/* {metrics.map(metric =>\r\n                <>\r\n                    <h5>\r\n                        {metric[0].original_value[0][0]}\r\n                    </h5>\r\n                    <p>\r\n                        {metric.dimensions[0].value}\r\n                    </p>\r\n                </>\r\n            )} */}\r\n        </div>\r\n    )\r\n}\r\n","import { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport CreateNotes from \"./components/CreateNotes\";\nimport Metrics from \"./components/Metrics\";\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navbar />\n\n        <Route path=\"/lists/custom/:id\" exact>\n          <Metrics />\n        </Route>\n\n\n      </Router>\n\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}